// <auto-generated />
using System;
using Hzg.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace hzg.Migrations
{
    [DbContext(typeof(AccountDbContext))]
    partial class AccountDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Hzg.Models.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("create_user");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("creator_id");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasColumnName("remark");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnType("char(36)")
                        .HasColumnName("update_user");

                    b.HasKey("Id");

                    b.ToTable("group", (string)null);
                });

            modelBuilder.Entity("Hzg.Models.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("ComponentPath")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("component_path");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("create_user");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("creator_id");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("des");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext")
                        .HasColumnName("icon");

                    b.Property<bool?>("IsFinal")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_final");

                    b.Property<bool?>("IsRoot")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_root");

                    b.Property<string>("Meta")
                        .HasColumnType("longtext")
                        .HasColumnName("meta");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("name");

                    b.Property<Guid?>("ParentMenuId")
                        .HasColumnType("char(36)")
                        .HasColumnName("parent_menu_id");

                    b.Property<string>("Path")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("path");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasColumnName("remark");

                    b.Property<string>("SortCode")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("sort_code");

                    b.Property<string>("Title")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnType("char(36)")
                        .HasColumnName("update_user");

                    b.Property<string>("Url")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("url");

                    b.HasKey("Id");

                    b.ToTable("menu", (string)null);
                });

            modelBuilder.Entity("Hzg.Models.MenuPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("create_user");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("creator_id");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasColumnName("remark");

                    b.Property<Guid>("RootMenuId")
                        .HasColumnType("char(36)")
                        .HasColumnName("root_menu_id");

                    b.Property<Guid>("SubMenuId")
                        .HasColumnType("char(36)")
                        .HasColumnName("sub_menu_id");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnType("char(36)")
                        .HasColumnName("update_user");

                    b.Property<string>("Url")
                        .HasColumnType("longtext")
                        .HasColumnName("url");

                    b.Property<bool?>("Usable")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("usable");

                    b.Property<string>("UserGroup")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("user_group");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.Property<string>("UserName")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("user_name");

                    b.Property<string>("UserRole")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("user_role");

                    b.Property<bool?>("Visible")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("visible");

                    b.HasKey("Id");

                    b.ToTable("menu_permission", (string)null);
                });

            modelBuilder.Entity("Hzg.Models.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .HasColumnType("longtext")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("create_user");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("creator_id");

                    b.Property<string>("Name")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("name");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasColumnName("remark");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasColumnName("sort");

                    b.Property<string>("Status")
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnType("char(36)")
                        .HasColumnName("update_user");

                    b.HasKey("Id");

                    b.ToTable("position", (string)null);
                });

            modelBuilder.Entity("Hzg.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("create_user");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("creator_id");

                    b.Property<string>("Name")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("name");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasColumnName("remark");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnType("char(36)")
                        .HasColumnName("update_user");

                    b.HasKey("Id");

                    b.ToTable("role", (string)null);
                });

            modelBuilder.Entity("Hzg.Models.RoleGroup", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)")
                        .HasColumnName("role_id");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("char(36)")
                        .HasColumnName("group_id");

                    b.HasKey("RoleId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("role_group", (string)null);
                });

            modelBuilder.Entity("Hzg.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Avatar")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("avatar");

                    b.Property<string>("CorpId")
                        .HasColumnType("longtext")
                        .HasColumnName("corp_id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("create_user");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("creator_id");

                    b.Property<string>("Email")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("email");

                    b.Property<string>("FcmToken")
                        .HasColumnType("longtext")
                        .HasColumnName("fcm_token");

                    b.Property<string>("Gender")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("gender");

                    b.Property<string>("IosToken")
                        .HasColumnType("longtext")
                        .HasColumnName("ios_token");

                    b.Property<DateTime?>("LastLoginTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_login_time");

                    b.Property<DateTime?>("ModifyTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modify_time");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.Property<string>("Nickname")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("nick_name");

                    b.Property<string>("OnlineState")
                        .HasColumnType("longtext")
                        .HasColumnName("online_state");

                    b.Property<string>("Password")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("password");

                    b.Property<string>("PayPassword")
                        .HasColumnType("longtext")
                        .HasColumnName("pay_password");

                    b.Property<string>("RealName")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("real_name");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext")
                        .HasColumnName("remark");

                    b.Property<string>("Salt")
                        .HasColumnType("longtext")
                        .HasColumnName("salt");

                    b.Property<string>("Settings")
                        .HasColumnType("longtext")
                        .HasColumnName("settings");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time");

                    b.Property<Guid?>("UpdateUser")
                        .HasColumnType("char(36)")
                        .HasColumnName("update_user");

                    b.Property<string>("UserMobile")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("user_mobile");

                    b.Property<DateTime?>("UserRegtime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("user_regtime");

                    b.HasKey("Id");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("Hzg.Models.UserGroup", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("char(36)")
                        .HasColumnName("group_id");

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_admin")
                        .HasComment("是否是管理员");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("user_group", (string)null);
                });

            modelBuilder.Entity("Hzg.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)")
                        .HasColumnName("role_id");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("user_role", (string)null);
                });

            modelBuilder.Entity("Hzg.Models.RoleGroup", b =>
                {
                    b.HasOne("Hzg.Models.Group", "Group")
                        .WithMany("GroupRoles")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hzg.Models.Role", "Role")
                        .WithMany("RoleGroups")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Hzg.Models.UserGroup", b =>
                {
                    b.HasOne("Hzg.Models.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hzg.Models.User", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hzg.Models.UserRole", b =>
                {
                    b.HasOne("Hzg.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hzg.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hzg.Models.Group", b =>
                {
                    b.Navigation("GroupRoles");

                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("Hzg.Models.Role", b =>
                {
                    b.Navigation("RoleGroups");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Hzg.Models.User", b =>
                {
                    b.Navigation("UserGroups");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
